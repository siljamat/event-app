scalar Date

type GeoPoint {
  type: Point!
  coordinates: [Float]!
}

enum Point {
  Point
}

type Event {
  id: ID!
  created_at: Date
  event_name: String!
  description: String!
  date: Date!
  location: GeoPoint
  email: String!
  organizer: String!
  address: String!
  age_restriction: String!
  event_site: String
  ticket_site: String
  price: String!
  image: String
  category: [Category]
  creator: User!
  favoriteCount: Int
  favoritedBy: [User]
}

input Coordinates {
  lat: Float!
  lng: Float!
}

input InputGeoPoint {
  type: Point!
  coordinates: [Float]!
}

type Query {
  events: [Event]
  event(id: ID!): Event
  apiEvent(id: ID!): Event
  eventsByCategory(categoryId: ID!): [Event]
  apiEventsByCategory(categoryId: ID!): [Event]
  eventsByDate(date: Date!): [Event]
  apiEventsByDate(date: Date!): [Event]
  eventsByPrice(price: String!): [Event]
  apiEventsByPrice(price: String!): [Event]
  eventsByOrganizer(organizer: String!): [Event]
  apiEventsByOrganizer(organizer: String!): [Event]
  eventsByMinAge(age: String!): [Event]
  apiEventsByMinAge(age: String!): [Event]
  eventsByArea(address: String!): [Event]
  apiEventsByArea(address: String!): [Event]
  apiEventsByMinAge(age: String!): [Event]
  eventsByLocation(location: InputGeoPoint!): [Event]
  apiEventsByLocation(location: InputGeoPoint!): [Event]
}

input InputEvent {
  event_name: String!
  description: String!
  date: Date!
  location: InputGeoPoint
  email: String!
  organizer: String!
  address: String!
  age_restriction: String!
  event_site: String
  ticket_site: String
  price: String!
  image: String
  category: InputCategory
}
#TODO: varmista pitääks täs olla noita pakollisia vai voiko olla valinnaisia ja miten se vaikuttaa resolveriin
input updateEvent {
  event_name: String!
  description: String!
  date: Date!
  location: InputGeoPoint
  email: String!
  organizer: String!
  address: String!
  age_restriction: String!
  event_site: String
  ticket_site: String
  price: String!
  image: String
  category: ID
}

type Mutation {
  createEvent(input: InputEvent): Event
  updateEvent(id: ID!, input: updateEvent!): Event
  deleteEvent(id: ID!): Event
}
